access_log /var/log/nginx/odoo-nginx.access.log;
error_log /var/log/nginx/odoo-nginx.error.log warn;

upstream odoo {
    server odoo:8069;
}

server {
    listen 80;
    server_name crm.DOMAIN;
    server_tokens off;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    ssl_protocols TLSv1.2;
    server_name crm.DOMAIN;
    server_tokens off;
    ssl on;
    ssl_certificate         /etc/letsencrypt/live/DOMAIN/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/DOMAIN/privkey.pem;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self'" always;
    add_header Referrer-Policy "same-origin" always;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem;

    location / {
        proxy_pass http://odoo;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Add secure flag to cookie using trick from https://unix.stackexchange.com/questions/306463/nginx-add-secure-flag-to-cookies-from-proxied-server
        # Maybe Odoo should do this itself if X-Forwarded-Proto is https, but the Odoo maintainers refuse to implement this
        proxy_cookie_path / "/; secure";
    }
}
